"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[244],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return p}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=a.createContext({}),u=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(m.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,m=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=u(n),p=r,g=c["".concat(m,".").concat(p)]||c[p]||s[p]||l;return n?a.createElement(g,i(i({ref:t},d),{},{components:n})):a.createElement(g,i({ref:t},d))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var m in t)hasOwnProperty.call(t,m)&&(o[m]=t[m]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4650:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return m},metadata:function(){return u},toc:function(){return d},default:function(){return c}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),i=["components"],o={sidebar_position:1},m="Remotes",u={unversionedId:"api-reference/remotes",id:"api-reference/remotes",title:"Remotes",description:"Remotes is a library for creating middlewared remotes.",source:"@site/docs/api-reference/remotes.md",sourceDirName:"api-reference",slug:"/api-reference/remotes",permalink:"/remotes/docs/api-reference/remotes",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Usage",permalink:"/remotes/docs/usage"}},d=[{value:"Functions",id:"functions",children:[],level:2},{value:"getAll",id:"getall",children:[],level:2},{value:"getEventAsync",id:"geteventasync",children:[{value:"Parameters",id:"parameters",children:[],level:3}],level:2},{value:"getFunctionAsync",id:"getfunctionasync",children:[{value:"Parameters",id:"parameters-1",children:[],level:3}],level:2},{value:"registerMiddleware",id:"registermiddleware",children:[{value:"Parameters",id:"parameters-2",children:[],level:3}],level:2}],s={toc:d};function c(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"remotes"},"Remotes"),(0,l.kt)("p",null,"Remotes is a library for creating middlewared remotes."),(0,l.kt)("h2",{id:"functions"},"Functions"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Return Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Signature"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Dictionary"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#getall"},(0,l.kt)("inlineCode",{parentName:"a"},"getAll()"))),(0,l.kt)("td",{parentName:"tr",align:null},"Get a dictionary of all created remotes.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RemoteEvent"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#geteventasync"},(0,l.kt)("inlineCode",{parentName:"a"},"getEventAsync(string remoteName)"))),(0,l.kt)("td",{parentName:"tr",align:null},"Get a remote event by the given name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RemoteFunction"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#getfunctionasync"},(0,l.kt)("inlineCode",{parentName:"a"},"getFunctionAsync(string remoteName)"))),(0,l.kt)("td",{parentName:"tr",align:null},"Get a remote function by the given name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"void"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#registerMiddleware"},(0,l.kt)("inlineCode",{parentName:"a"},"registerMiddleware(function middleware)"))),(0,l.kt)("td",{parentName:"tr",align:null},"Add the given function to the middleware list.")))),(0,l.kt)("h2",{id:"getall"},"getAll"),(0,l.kt)("p",null,"Returns all remotes."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'local allRemotes = Remotes:getAll()\n\nprint(allRemotes)\n--[[\n    {\n        events = {\n            ["RemoteName"] = DummyRemote;\n        };\n        functions = {\n            ["RemoteName"] = DummyRemote;\n        }\n    }\n]]\n')),(0,l.kt)("h2",{id:"geteventasync"},"getEventAsync"),(0,l.kt)("p",null,"Returns a remote event. On the server, this returns a ",(0,l.kt)("inlineCode",{parentName:"p"},"DummyRemoteEvent")," which behaves as a standard RemoteEvent. On the client, this returns an actual RemoteEvent instance."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'local myRemote = Remotes:getEventAsync("MyRemote")\n\nmyRemote:FireAllClients("Yeehaw")\n')),(0,l.kt)("h3",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"remoteName"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The name of the given remote.")))),(0,l.kt)("h2",{id:"getfunctionasync"},"getFunctionAsync"),(0,l.kt)("p",null,"Returns a remote function. On the server, this returns a ",(0,l.kt)("inlineCode",{parentName:"p"},"DummyRemoteFunction")," which behaves as a standard RemoteFunction. On the client, this returns an actual RemoteFunction instance."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'local myRemote = Remotes:getFunctionAsync("MyRemote")\n\nlocal info = myRemote:InvokeServer()\n')),(0,l.kt)("h3",{id:"parameters-1"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"remoteName"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The name of the given remote.")))),(0,l.kt)("h2",{id:"registermiddleware"},"registerMiddleware"),(0,l.kt)("p",null,"Adds the given function to the middleware suite. Middleware are functions executed when the client invokes the server but before the server responds."),(0,l.kt)("p",null,"A middleware function receives the table of arguments being sent by the client (including the player the call came from) and a table of metadata with info about the remote itself."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'local metadata = {\n    remoteName = "myRemote";\n    remoteClass = "RemoteFunction";\n}\n')),(0,l.kt)("p",null,"Each middleware should return a boolean indicating if the call should be dropped, and the arguments to send to the next middleware function or the server call."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'local function middleware(arguments, metadata)\n    arguments[2] = "yeehaw"\n    print(arguments[1]) -- Player\n    print(metadata.remoteName)\n    print(metadata.remoteClass)\n    return false, arguments --don\'t drop the call, and send the modified arguments\nend\n\nRemotes:registerMiddleware(middleware)\n')),(0,l.kt)("h3",{id:"parameters-2"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"function"),(0,l.kt)("td",{parentName:"tr",align:null},"middleware"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The function to add as middleware.")))))}c.isMDXComponent=!0}}]);